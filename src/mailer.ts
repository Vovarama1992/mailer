import * as dotenv from 'dotenv'; 
import nodemailer from 'nodemailer';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import { dirname } from 'path';

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Ç–µ–∫—É—â–µ–º—É —Ñ–∞–π–ª—É
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// –ü—É—Ç—å –∫ —à–∞–±–ª–æ–Ω—É –ø–∏—Å—å–º–∞
const templatePath = path.join(__dirname, 'template.html');
let htmlTemplate = fs.readFileSync(templatePath, 'utf8');

// –°–ø–∏—Å–æ–∫ –ø–æ—Ä—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–±–æ–≤–∞–Ω–∏—è
const ports: number[] = [25, 587, 465];

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∏—Å—å–º–∞
const sendTestEmail = async (): Promise<void> => {
  for (let i = 0; i < ports.length; i++) {
    const port = ports[i];
    try {
      console.log(`üìù Trying port: ${port}`);

      // –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ—Ä–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—á—Ç—ã —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
      console.log(`üìù Creating transporter for port ${port}`);
      const transporter = nodemailer.createTransport({
        host: process.env.SMTP_HOST,
        port: port,  
        secure: port === 465, // –ï—Å–ª–∏ –ø–æ—Ä—Ç 465, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å secure: true
        auth: {
          user: process.env.SMTP_USER,
          pass: process.env.SMTP_PASS,
        },
        tls: {
          rejectUnauthorized: false,
        },
        logger: true,  
        debug: true,   // –í–∫–ª—é—á–∞–µ–º –æ—Ç–ª–∞–¥–∫—É –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ SMTP
      });

      // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ—Ä–∞
      console.log(`üîß Transporter created for port ${port}`);

      // –ó–∞–º–µ–Ω—è–µ–º {{name}} –Ω–∞ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
      const emailContent = htmlTemplate.replace('{{name}}', 'David');
      console.log(`üìù Email content prepared for sending: ${emailContent.substring(0, 100)}...`); // –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ
      console.log(`üì§ Sending email on port ${port}`);
      const info = await transporter.sendMail({
        from: process.env.EMAIL_FROM, 
        to: 'vovayhh9988@gmail.com',
        subject: 'Test email from SMTP server',
        html: emailContent,
      });

      console.log(`‚úÖ Message sent on port ${port}: ${info.messageId}`);
      break;  // –í—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
    } catch (err: unknown) {
      if (err instanceof Error) {
        console.error(`‚ùå Error sending email on port ${port}: ${err.message}`);
      } else {
        console.error(`‚ùå Error on port ${port}: Unknown error`);
      }
    }
  }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∏—Å—å–º–∞
console.log("üîî Starting email sending process...");
sendTestEmail();