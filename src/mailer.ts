import * as dotenv from 'dotenv';
import * as nodemailer from 'nodemailer';
import * as fs from 'fs';
import * as path from 'path';

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Ç–µ–∫—É—â–µ–º—É —Ñ–∞–π–ª—É
const templatePath = path.join(path.dirname(new URL(import.meta.url).pathname), 'template.html');
let htmlTemplate = fs.readFileSync(templatePath, 'utf8');

// –°–ø–∏—Å–æ–∫ –ø–æ—Ä—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–±–æ–≤–∞–Ω–∏—è
const ports: number[] = [465];

// –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ—Ä–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—á—Ç—ã
const transporter = nodemailer.createTransport({
  host: '127.0.0.1',
  port: 465,
  secure: true,
  auth: {
    user: process.env.SMTP_USER,
    pass: process.env.SMTP_PASS,
  },
  tls: {
    rejectUnauthorized: false,  // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
  },
  logger: true,
  debug: true,
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∏—Å—å–º–∞
const sendTestEmail = async (): Promise<void> => {
  for (let i = 0; i < ports.length; i++) {
    const port = ports[i];
    try {
      console.log(`üìù Trying port: ${port}`);

      // –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ—Ä–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ—Ä—Ç–∞
      const transporter = nodemailer.createTransport({
        host: process.env.SMTP_HOST,
        port: port,
        secure: port === 465,
        auth: {
          user: process.env.SMTP_USER,
          pass: process.env.SMTP_PASS,
        },
        logger: true,
        debug: true,
      });

      // –ó–∞–º–µ–Ω—è–µ–º {{name}} –Ω–∞ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
      const emailContent = htmlTemplate.replace('{{name}}', 'David');

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ
      const info = await transporter.sendMail({
        from: process.env.EMAIL_FROM,
        to: 'davidbadzgaradze@gmail.com',
        subject: 'Test email from SMTP server',
        html: emailContent,
      });

      console.log(`‚úÖ Message sent on port ${port}: ${info.messageId}`);
      break;
    } catch (err: unknown) {
      if (err instanceof Error) {
        console.error(`‚ùå Error sending email on port ${port}: ${err.message}`);
      } else {
        console.error(`‚ùå Error on port ${port}: Unknown error`);
      }
    }
  }
};

sendTestEmail();